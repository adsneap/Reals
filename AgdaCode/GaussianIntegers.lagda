

\begin{code}

open import SpartanMLTT renaming (_+_ to _โ_)

open import IntegersB
  
โค[i] : ๐คโ ฬ
โค[i] = โค ร โค

open import IntegersAddition renaming (_+_ to _โค+_)

_+_ : โค[i] โ โค[i] โ โค[i] 
(a , b) + (c , d) = a โค+ c , b โค+ d

infixl 40 _+_

open import IntegersMultiplication renaming (_*_ to _โค*_)

๐ฒ : โค[i]
๐ฒ = (pos 0 , pos 1)

-๐ฒ : โค[i]
-๐ฒ = pos 0 , negsucc 0

open import IntegersNegation renaming (-_ to โค-_)

_โค-_ : โค โ โค โ โค
a โค- b  = a โค+ (โค- b)

_*_ : โค[i] โ โค[i] โ โค[i]
(a , b) * (c , d) = ((a โค* c) โค- (b โค* d)) , a โค* d โค+ b โค* c

open import UF-Base

i-squared : ๐ฒ * ๐ฒ โก โค- pos 1 , pos 0
i-squared = to-ร-โก refl refl

โค[i]+-comm : (x y : โค[i]) โ x + y โก y + x
โค[i]+-comm (a , b) (c , d) = to-ร-โก (โค+-comm a c) (โค+-comm b d)

โค[i]+-assoc : (x y z : โค[i]) โ x + y + z โก x + (y + z)
โค[i]+-assoc (a , b) (c , d) (u , v) = to-ร-โก I II
 where
  I : a โค+ c โค+ u โก a โค+ (c โค+ u)
  I = โค+-assoc a c u
  II : b โค+ d โค+ v โก b โค+ (d โค+ v)
  II = โค+-assoc b d v




\end{code}


